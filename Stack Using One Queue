from collections import deque

class MyStack:
    def __init__(self):
        self.q = deque()

    def push(self, x):
        self.q.append(x)

    def pop(self):
        if not self.q:
            return None
        n = len(self.q)
        for i in range(n-1):
            self.push(self.q.popleft())

        popped_ele = self.q.popleft()
        return popped_ele
    
    def top(self):
        if not self.q:
            return None
        return self.q[-1]
    
    def empty(self):
        return len(self.q) == 0
    
    def isFull(self):
        #Assuming stack dynamic.
        return False

obj = MyStack()
obj.push(1)
obj.push(2)
obj.push(3)
print(obj.pop())
obj.push(4)
obj.push(5)
print(obj.pop())
print(obj.top())
